"use strict";(self.webpackChunkthe_nest_new=self.webpackChunkthe_nest_new||[]).push([[749],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return t?r.createElement(h,a(a({ref:n},u),{},{components:t})):r.createElement(h,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},900:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),s=(t(7294),t(3905)),a=["components"],i={sidebar_position:3},l="Using common services",c={unversionedId:"cybersecurity/pentest-notes/foothold/services",id:"cybersecurity/pentest-notes/foothold/services",title:"Using common services",description:"Email",source:"@site/docs/cybersecurity/pentest-notes/foothold/services.md",sourceDirName:"cybersecurity/pentest-notes/foothold",slug:"/cybersecurity/pentest-notes/foothold/services",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/services",editUrl:"https://github.com/crystalwwj/the-nest/edit/main/docs/cybersecurity/pentest-notes/foothold/services.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Web",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/web"}},u=[{value:"Email",id:"email",children:[{value:"SMTP",id:"smtp",children:[],level:3},{value:"POP",id:"pop",children:[],level:3},{value:"IMAP",id:"imap",children:[],level:3}],level:2},{value:"LDAP",id:"ldap",children:[],level:2},{value:"WSMAN",id:"wsman",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"using-common-services"},"Using common services"),(0,s.kt)("h2",{id:"email"},"Email"),(0,s.kt)("h3",{id:"smtp"},"SMTP"),(0,s.kt)("p",null,"SMTP usually runs on port 25, 265(ssl), and 587(ssl), but of course it could run on any other port. If you find a port running SMTP, you can connect and login to it using:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# connecting\ntelnet <IP> 25\n\n# authenticate with username password (will be prompted)\nAUTH\n\n# Tell the server your domain name\nEHLO <domain>   # ex: EHLO the-nest.com\n\n# to send a letter, ex: from crystal to steven\nMAIL FROM crystal@the-nest.com\nRCPT TO steven@the-nest.com\nDATA\n....type your stuff here....\nEOF     # to indicate that your message is completed\n")),(0,s.kt)("p",null,"You don't always need authentication to use the SMTP service, so it's likely that you can send emails or issue other commands without valid credentials."),(0,s.kt)("p",null,"You can enumerate usernames with some commands:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# VRFY\nVRFY root\n250 Super-User <root@myhost>\nVRFY blah\n550 blah... User unknown\n\n# EXPN\nEXPN test\n550 5.1.1 test... User unknown\nEXPN root\n250 2.1.5 <ed.williams@myhost>\nEXPN sshd\n250 2.1.5 sshd privsep <sshd@mail2>\n\n# RCPT TO\nMAIL FROM:test@test.org\n250 2.1.0 test@test.org... Sender ok\nRCPT TO:test\n550 5.1.1 test... User unknown\nRCPT TO:admin\n550 5.1.1 admin... User unknown\nRCPT TO:ed\n250 2.1.5 ed... Recipient ok\n")),(0,s.kt)("h3",{id:"pop"},"POP"),(0,s.kt)("p",null,"POP usually runs on port 110 and 995(ssl). It allows you to fetch and retrieve emails. The messages arestored on the client machine and deleted from the server. "),(0,s.kt)("p",null,"The basic commands are:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# connecting\ntelnet <IP> 110\n\n# login\nuser <username>\npass <password>\n\n# get capabilities\ncapa\n\n# list emails\nlist\n\n# read emails of index\nretr 1  # first email\nretr 2\n\n# delete emails of index\ndele 1\n\n# exit and close connection\nquit\n")),(0,s.kt)("h3",{id:"imap"},"IMAP"),(0,s.kt)("p",null,"IMAP uses port 143 and 993(ssl). Similar to POP, this service allows you to retrieve received email. Contrary to POP though, you aren't downloading or storing messages to your system. You're actually reading the information from the server itself, so this protocol allows you to access your mails from multiple devices simultaneously."),(0,s.kt)("p",null,"The basic commands are:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# connecting\ntelnet <IP> 143\n\n# login, use quotes around strings if it contains spaces of othe special chars\nA1 LOGIN <username> <password>\n\n# list folder and mailboxes\nA1 LIST "" *\nA1 LIST INBOX *\nA1 LIST "Archive" *\n\n# create/delete folders/mailboxes\nA1 CREATE INBOX.Archive.2012\nA1 DELETE "To Read"\n\n# select mailbox\nA1 SELECT INBOX\n\n# list messages, FLAGS can be defined for mailboxes and will be given from SELECT command\n# system-defined flags are: Seen, Answered, Flagged, Deleted, Draft, Recent\nA1 FETCH 1:* (FLAGS)\nA1 UID FETCH 1:* (FLAGS)\n\n# Retrieve Message Content\nA1 FETCH 2 body[text]\nA1 FETCH 2 all\nA1 UID FETCH 102 (UID RFC822.SIZE BODY.PEEK[])\n\n# close mailbox\nA1 CLOSE\n\n# logout and close connection\nA1 LOGOUT\n')),(0,s.kt)("h2",{id:"ldap"},"LDAP"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"LDAP (Lightweight Directory Access Protocol) is a software protocol for enabling anyone to locate organizations, individuals, and other resources such as files and devices in a network, whether on the public Internet or on a corporate intranet.")),(0,s.kt)("p",null,"Think of it as a tree structure for the entire organization."),(0,s.kt)("p",null,"Enumeration with ",(0,s.kt)("a",{parentName:"p",href:"https://book.hacktricks.xyz/pentesting/pentesting-ldap#basic-enumeration"},"python")," or with ldapsearch:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# without creds\nldapsearch -x -h <IP> -D '' -w '' -b \"DC=<1_SUBDOMAIN>,DC=<TLD>\"\n\n# with creds\nldapsearch -x -h <IP> -D '<DOMAIN>\\<username>' -w '<password>' -b \"DC=<1_SUBDOMAIN>,DC=<TLD>\"\n\n# with creds, kerberos instead of NTLM\nldapsearch -x -h <IP> -D '<DOMAIN>\\<username>' -w '<password>' -Y GSSAPI -b \"DC=<1_SUBDOMAIN>,DC=<TLD>\"\n\n")),(0,s.kt)("p",null,"When you have creds, you can try to dump data, change ",(0,s.kt)("inlineCode",{parentName:"p"},"CN")," for different info:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Commonly used CN values\n# CN=Users              -> extract users\n# CN=Computers          -> extract computers\n# CN=<MY NAME>          -> extract my info\n# CN=Domain Admins      -> extract domain admins\n# CN=Domain Users       -> extract domain users\n# CN=Enterprise Admins  -> extract enterprise admins\n# CN=Administrators     -> extract Administrators\n# CN=Remote Desktop Users   -> extract RDP users\n\nldapsearch -x -h <IP> -D '<DOMAIN>\\<username>' -w '<password>' -b \"CN=<CN>,DC=<1_SUBDOMAIN>,DC=<TLD>\"\n")),(0,s.kt)("p",null,"Dump everything"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ldapsearch -x -h <IP> -D '<DOMAIN>\\<username>' -w '<password>' -b \"DC=<1_SUBDOMAIN>,DC=<TLD>\"\n# -x Simple Authentication\n# -h LDAP Server\n# -D My User\n# -w My password\n# -b Base site, all data from here will be given\n")),(0,s.kt)("h2",{id:"wsman"},"WSMAN"),(0,s.kt)("p",null,"WinRM (Windows Remote Management) is the Microsoft implementation of WS-Management Protocol. It's usually in a higher port(5985, 5986), so if you don't run ",(0,s.kt)("inlineCode",{parentName:"p"},"-p-")," nmap by default will not find it since it's not in the top 1000 common ports. But if you have creds this gives an awesome shell!"),(0,s.kt)("p",null,"For WinRM hacking, use ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Hackplayers/evil-winrm"},"evil-winrm"),"."),(0,s.kt)("p",null,"Usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# powersploit in /usr/share/windows-resources/powersploit/Exfiltration\n\n# if you want to load powershell scripts, supply the -s option\nevil-winrm -i 10.10.10.149 -u SUPPORTDESK\\\\chase -s ~/pshs/ -p 'Q4)sJu\\Y8qz*A3?d'\n\n# if you want to load executables, supply the -e option\nevil-winrm -i 10.10.10.149 -u SUPPORTDESK\\\\chase -e ~/execs/ -p 'Q4)sJu\\Y8qz*A3?d'\n\n# you can upload/download any files inside shell\nupload <filename>\ndownload <filename>\n")))}d.isMDXComponent=!0}}]);