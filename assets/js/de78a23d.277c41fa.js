"use strict";(self.webpackChunkthe_nest_new=self.webpackChunkthe_nest_new||[]).push([[342],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||s;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4253:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),s=(t(7294),t(3905)),a=["components"],i={sidebar_position:1},c="Host Discovery and Service Enumeration",p={unversionedId:"cybersecurity/pentest-notes/foothold/discovery-and-enum",id:"cybersecurity/pentest-notes/foothold/discovery-and-enum",title:"Host Discovery and Service Enumeration",description:"Network Scanning",source:"@site/docs/cybersecurity/pentest-notes/foothold/discovery-and-enum.md",sourceDirName:"cybersecurity/pentest-notes/foothold",slug:"/cybersecurity/pentest-notes/foothold/discovery-and-enum",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/discovery-and-enum",editUrl:"https://github.com/crystalwwj/the-nest/edit/main/docs/cybersecurity/pentest-notes/foothold/discovery-and-enum.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/the-nest/docs/cybersecurity/pentest-notes/intro"},next:{title:"Web",permalink:"/the-nest/docs/cybersecurity/pentest-notes/foothold/web"}},u=[{value:"Network Scanning",id:"network-scanning",children:[],level:2}],l={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"host-discovery-and-service-enumeration"},"Host Discovery and Service Enumeration"),(0,s.kt)("h2",{id:"network-scanning"},"Network Scanning"),(0,s.kt)("p",null,"Host discovery\nFor nmap, sometimes hosts are configured to block ping scanning. Use ",(0,s.kt)("inlineCode",{parentName:"p"},"-Pn")," flag for this."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# Quickly ping hosts in subnet with (nmap is slower):\ntime for i in $(seq 1 254); do (ping -c 1 10.120.15.${i} | grep "bytes from" &); done;\n\n# Quick scan to see if hosts are up\nnmap -sn 10.11.1.1-254\n\n# Scan network for hosts with particular port open\nnmap -Pn -p<port> <target networks>\n\n# For large networks use masscan\nsudo masscan -p80 10.11.1.0/24 --rate=1000 -e tap0 --router-ip 10.11.0.1 \n')),(0,s.kt)("p",null,"For regular TCP scans:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Scan all ports to filter out closed ones\nnmap -sS -p- --min-rate 3000 <IP>\n\n# Scan version, OS, and nse on open ports. For example if 80,443,139,445 were open:\nnmap -sSCV -p<open ports> <IP>\n\n# Scan for vulns on specific ports\nnmap -Pn -p<port> --script vuln 10.10.10.4\n")),(0,s.kt)("p",null,"Scan UDP:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sU -p- --min-rate 3000 -oA nmap/alludp 10.10.10.105\n")),(0,s.kt)("p",null,"Notes:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"SYN scan(-sS) needs root privs! Add sudo if necessary. Connect scan(-sT) doesn't."),(0,s.kt)("li",{parentName:"ul"},"When scanning with port forwarding or other tunnels, such as with ",(0,s.kt)("inlineCode",{parentName:"li"},"proxychains"),", use ",(0,s.kt)("inlineCode",{parentName:"li"},"-sT")," because SOCKS proxy can't use SYN scan and ",(0,s.kt)("inlineCode",{parentName:"li"},"-Pn")," because ICMP is blocked!")))}d.isMDXComponent=!0}}]);